set nocompatible
syntax on
filetype plugin indent on

"=== Settings ==="
set noerrorbells
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set number relativenumber
set nowrap
set smartcase
set scrolloff=5
set nofoldenable

" Misc
set hidden
set ttyfast
set nobackup
set noswapfile
set undofile
set undodir="~/.vim/undodir"


"=== Plug Setup ==="
if has('unix') && empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'jeffkreeftmeijer/vim-numbertoggle'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-surround'
Plug 'nvie/vim-flake8', { 'for': 'python' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ycm-core/YouCompleteMe', { 'for': ['python', 'c'] }
Plug 'airblade/vim-gitgutter'
Plug 'flazz/vim-colorschemes'
Plug 'qualiabyte/vim-colorstepper'
call plug#end()

"=== Colors ==="
colorscheme gruvbox
set background=dark

" Define highlight group
highlight ExtraWhitespace ctermbg=red ctermfg=black " extra whitespace =             
highlight OverLength ctermbg=red ctermfg=black      " over length = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
match ExtraWhitespace /\s\+$/
2match OverLength /\%>100v.\+/
augroup ewol
    autocmd!
    autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
    autocmd InsertLeave * match ExtraWhitespace /\s\+$/
augroup END
set cursorline
highlight clear CursorLine
highlight CursorLineNR cterm=NONE ctermfg=white

" Listchars setting
highlight SpecialKey ctermfg=DarkGrey
set listchars=tab:↦\ ,nbsp:␣,trail:·,extends:⟩,precedes:⟨

"=== Mappings ==="
let mapleader = ","
nnoremap <Leader><Space> :noh<CR>
nnoremap <F8> :set number! relativenumber!<CR>
nnoremap Y y$
nnoremap j gj
nnoremap k gk
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <Leader>bh :bp<CR>
nnoremap <Leader>bl :bn<CR>
nnoremap <C-d> :sh<CR>  " terminal with Ctrl-D
inoremap <expr> <Tab> pumvisible() ? "\<Down>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<Up>" : "\<S-Tab>"
" FIXME: duplicated code here. Could create an [in]noremap?
nnoremap <Space><Space> <Esc>/<++><CR>c4l
inoremap <Space><Space> <Esc>/<++><CR>c4l

nnoremap <Leader>sv :source $MYVIMRC<CR>
nnoremap <Leader>ev :e $MYVIMRC<CR>


"=== File specifics autocommands ==="
autocmd BufEnter * let &ft = &ft
augroup filetype_autocommands
    autocmd! FileType
    autocmd FileType python nmap <leader>; <Esc>:w<CR>:!clear;python3 "%"<CR>
    autocmd FileType python nmap <leader>t <Esc>:w<CR>:!clear;mypy %<CR>
    autocmd FileType python nmap <leader>gd 2o'''<Esc>O:param <++>: <++><CR>:returns: <++><Esc>2k
    autocmd FileType python set foldmethod=indent
    autocmd FileType markdown nmap <leader>; <Esc>:w<CR>:! $BROWSER %<CR>
    autocmd FileType c nmap <leader>; <Esc>:w<CR>:!clear && make<CR>
    autocmd FileType c imap <leader>print printf("\n");<Esc>F\i
    autocmd FileType sh nmap <leader>; <Esc>:w<CR>:!clear && ./"%"<CR>
augroup END


"=== Plugin Config ==="
" vim surround
nmap s <Plug>Ysurround
nmap S <Plug>YSurround
xmap s <Plug>VSurround
xmap S <Plug>VgSurround

" Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#buffer_nr_show = 1

" YCM
let g:ycm_global_ycm_extra_conf = '~/.local/src/YCM/.ycm_extra_conf.py'
nnoremap <leader>d :YcmCompleter GoTo<CR>

" FZF
let g:fzf_layout = { 'window': { 'width': 0.8, 'height': 0.8 } }
nnoremap <leader>f      :Files<CR>
nnoremap <leader>t      :Tags<CR>
nnoremap <leader>bt     :BTags<CR>

" GitGutter
nnoremap <Leader>hv <Plug>(GitGutterPreviewHunk)
" visually shows weird chars. this is the fix for that
set t_TI=
set t_TE=

" colorstepper
nmap <F6> <Plug>ColorstepPrev
nmap <F7> <Plug>ColorstepNext
nmap <S-F7> <Plug>ColorstepReload
