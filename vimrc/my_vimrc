set nocompatible
set encoding=UTF-8
set modelines=0

""""""""""""""
" Plug Setup "
""""""""""""""

" Automatically installs 'vim-plug' if it is not installed. (linux only)
if has('unix')
    if empty(glob('~/.vim/autoload/plug.vim'))
      silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
endif

call plug#begin('~/.vim/plugged')
Plug 'jeffkreeftmeijer/vim-numbertoggle'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-surround'
Plug 'nvie/vim-flake8', { 'for': 'python' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ycm-core/YouCompleteMe', { 'for': ['python', 'c'] }
Plug 'airblade/vim-gitgutter'
call plug#end()

""""""""""""""""
" Colorscheme  "
""""""""""""""""

" Define highlight group
highlight ExtraWhitespace ctermbg=red ctermfg=black
match ExtraWhitespace /\s\+$/

highlight OverLength ctermbg=red ctermfg=black
2match OverLength /\%>100v.\+/

" Work-around to make colorschemes not f highlighting up
" autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red ctermfg=black
" autocmd ColorScheme * highlight OverLength ctermbg=red ctermfg=black
" Sensible matching when in/not in insert mode
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/


""""""""""""
" Mappings "
""""""""""""
let mapleader = ","
nnoremap <Leader><Space> :noh<CR>
nnoremap <F8> :set number! relativenumber!<CR>
nnoremap Y y$

" Movement
nnoremap j gj
nnoremap k gk

" Movement between splits/buffers.
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <Leader>bh :bp<CR>
nnoremap <Leader>bl :bn<CR>

" Command mode with swedish keyboard layout
nnoremap ö :
nnoremap Ö :

" Open terminal with Ctrl+D (And then exit that with Ctrl+D aswell)
nnoremap <C-d> :sh<CR>

" Scroll through popup with tab
inoremap <expr> <Tab> pumvisible() ? "\<Down>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<Up>" : "\<S-Tab>"

" vimrc
nnoremap <Leader>sv :source $MYVIMRC<CR>
nnoremap <Leader>ev :e $MYVIMRC<CR>


""""""""""""
" Settings "
""""""""""""
" Formatting
set wrap
set textwidth=100
set formatoptions=qrn1
set nowrap

" Tabs
set tabstop=4
set shiftwidth=4
set softtabstop=4
set autoindent
set smartindent
set cindent
set expandtab

" Folds
set foldmethod=syntax
set foldlevel=1
set foldclose=all
set foldnestmax=1

" Search
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch

" Misc
set hidden
set splitbelow
set splitright
set scrolloff=5
set visualbell
set ttyfast
set ruler
set laststatus=2
set undofile
set number relativenumber
set gdefault
set autoread

" get rid those of nasty files
set undodir=/tmp//
set directory=/tmp//
set backupdir=/tmp//


""""""""""""""""""
" File specifics "
""""""""""""""""""
autocmd FileType python nnoremap <leader>; <Esc>:w<CR>:!clear;python3 "%"<CR>
autocmd FileType python nnoremap <leader>t <Esc>:w<CR>:!clear;mypy %<CR>
autocmd FileType python set foldmethod=indent

autocmd FileType markdown nnoremap <leader>; <Esc>:w<CR>:! $BROWSER %<CR>

autocmd FileType c nnoremap <leader>; <Esc>:w<CR>:!clear && make<CR>
autocmd FileType c inoremap <leader>print printf("\n");<Esc>F\i

autocmd FileType sh nnoremap <leader>; <Esc>:w<CR>:!clear && ./"%"<CR>


""""""""""""""""
" Autocommands "
""""""""""""""""
autocmd FocusLost * :wa
autocmd BufEnter :syntax sync fromstart

set ambiwidth=double

" Listchars setting
highligh SpecialKey ctermfg=DarkGrey
set showbreak=↪\
set listchars=tab:↦\ ,nbsp:␣,trail:·,extends:⟩,precedes:⟨
set list


"""""""""""""""""
" Plugin Config "
"""""""""""""""""

" vim surround
nmap s <Plug>Ysurround
nmap S <Plug>YSurround
xmap s <Plug>VSurround
xmap S <Plug>VgSurround

" Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#buffer_nr_show = 1

" YCM
function EditYcmExtra()
    edit '~/.local/src/YCM/.ycm_extra_conf.py'
endfunction
let g:ycm_global_ycm_extra_conf = '~/.local/src/YCM/.ycm_extra_conf.py'
nnoremap <leader>d   :YcmCompleter GoTo<CR>

" FZF
let g:fzf_layout = { 'window': { 'width': 0.8, 'height': 0.8 } }
nnoremap <leader>f      :Files<CR>
nnoremap <leader>t      :Tags<CR>
nnoremap <leader>bt     :BTags<CR>

" GitGutter
highlight SignColumn ctermbg=black
highlight GitGutterAdd ctermfg=DarkGreen
highlight GitGutterChange ctermfg=DarkYellow
highlight GitGutterDelete ctermfg=DarkRed
