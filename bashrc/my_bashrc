# Source standard .bashrc
if [ -f /etc/skel/.bashrc ]; then
    . /etc/skel/.bashrc
else
    echo Could not find /etc/skel/.bashrc, no defaults set.
fi

# Source any host specific configs.
if [ -f ~/.bash_hostspecific ]; then
    . ~/.bash_hostspecific
fi

# Vim-mode for bash
set -o vi

export BROWSER='chromium'
export EDITOR='vim'
export TERMINAL='xterm'
export TERM='xterm'

RESET="\e[0m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
RED="\e[31m"

RESET_NOLEN="\[${RESET}\]"
GREEN_NOLEN="\[${GREEN}\]"
YELLOW_NOLEN="\[${YELLOW}\]"
BLUE_NOLEN="\[${BLUE}\]"
CYAN_NOLEN="\[${CYAN}\]"
RED_NOLEN="\[${RED}\]"

# Used to wrap text in color using escape codes and then adding that to PS1
# $1 text to be wrapped
# $2 color, string.
add_to_PS1() {
    case $2 in
        green)
            PS1+="${GREEN_NOLEN}$1${RESET_NOLEN}"
            ;;
        yellow)
            PS1+="${YELLOW_NOLEN}$1${RESET_NOLEN}"
            ;;
        blue)
            PS1+="${BLUE_NOLEN}$1${RESET_NOLEN}"
            ;;
        cyan)
            PS1+="${CYAN_NOLEN}$1${RESET_NOLEN}"
            ;;
        red)
            PS1+="${RED_NOLEN}$1${RESET_NOLEN}"
            ;;
        *)
            PS1+=$1
            ;;
    esac
}

set_my_PS1() {
    unset PS1
    add_to_PS1 "[ " yellow
    add_to_PS1 "\u" green
    add_to_PS1 " : "
    add_to_PS1 "\w" blue
    add_to_PS1 " ] " yellow
    add_to_PS1 '[$(git branch 2>/dev/null | grep "^*" | colrm 1 2)]' green
    [ $VIM ] && add_to_PS1 "[VIM :sh]" yellow
    add_to_PS1 "\n\$ "
}
set_my_PS1

# Trim lenght of prompt.
export PROMPT_DIRTRIM=4

# Change title of window to current directory
PROMPT_COMMAND_BASE="\033]0;$(whoami)@$(hostname) | $(dirs)"
lastcmd() {
    LASTCMD=$(history 1 | cut -c8-)
    echo -ne "$PROMPT_COMMAND_BASE | $LASTCMD \a"
}
PROMPT_COMMAND=lastcmd

# Handy aliases
alias naut='nautilus . > /dev/null &'
alias :q='exit'
alias chrome="chromium-browser"
alias py="python3"

# git aliases
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.ci commit
git config --global alias.st 'status -s'
git config --global alias.unstage 'reset HEAD --'
git config --global alias.unmodify 'checkout --'
git config --global alias.lg 'log --oneline -n10'
git config --global alias.magic 'push origin HEAD:refs/for/master'

# 'dotfiles' status text
echo -e "${GREEN}==${RESET} Status of dotfiles ${GREEN}==${RESET}"
git_st=$(cd $DOTFILES_HOME; git st)
cd - &> /dev/null
if [ -n git_st ]; then
    cd $DOTFILES_HOME
    git status -sb
    cd - &> /dev/null
fi

