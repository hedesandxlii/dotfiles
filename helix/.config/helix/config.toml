# See also languages.toml
theme = "my_emacs"

[editor]
line-number = "absolute"
mouse = true
rulers = []
bufferline = "multiple"
color-modes = true
cursorline = false
shell = ["bash", "-c"]
gutters = ["diff"]

[editor.statusline]
right = ["version-control", "spacer", "diagnostics", "selections", "register", "position", "file-encoding"]

[editor.lsp]
display-inlay-hints = true
display-messages = true

[editor.cursor-shape]
insert = "bar"

[editor.indent-guides]
render = true
character = "│"
skip-levels = 1

[editor.whitespace.characters]
space = "·"
nbsp = "⍽"
newline = "⏎"
tab = "→"
tabpad = " " # Tabs will look like "→   " (depending on tab width)

[editor.soft-wrap]
enable = true

[keys.insert]
C-space = "completion"

[keys.select]
Y = ":yank-join"
# flip to not include word boundaries by default 
"*" = "search_selection"
"A-*" = "search_selection_detect_word_boundaries"

[keys.normal]
esc = ["collapse_selection", "keep_primary_selection"]
C-r = ":reload-all"
Y = ":yank-join"
# flip to not include word boundaries by default 
"*" = "search_selection"
"A-*" = "search_selection_detect_word_boundaries"

[keys.normal.space.g]
# Git stuff
p = "changed_file_picker"  # remap the default space>g to space>g>p
b = ":sh git blame -L%{cursor_line},+1 %{buffer_name}"  # blame on current row
r = ":reset-diff-change"

[keys.normal.space.space]
# Multiply selection to whole buffer
"*" = "@*%s<ret>"
B = ":pipe boiler %{buffer_name}"
# whitespace stuff
t = [
  "save_selection",
  "select_all",
  ":pipe sed -E 's/\\ +$//'",
  "collapse_selection",
  "jump_backward",
]
# Toggles
w = ":toggle-option whitespace.render all none"
s = ":toggle-option soft-wrap.enable"
h = ":toggle-option lsp.auto-signature-help"
i = ":toggle-option lsp.display-inlay-hints"
m = ":toggle-option mouse"
 
# Python things
p = "@a=<esc>ms}ms\"if<esc>vhms)iprint<esc>"  # surround selection with print(f"{<sel>=}")

[keys.select.space.space]
# Multiply selection to whole buffer
"*" = "@*%s<ret>"
B = ":pipe boiler %{buffer_name}"
# whitespace stuff
t = [
  "save_selection",
  "select_all",
  ":pipe sed -E 's/\\ +$//'",
  "collapse_selection",
  "jump_backward",
]
# Toggles
w = ":toggle-option whitespace.render all none"
s = ":toggle-option soft-wrap.enable"
h = ":toggle-option lsp.auto-signature-help"
i = ":toggle-option lsp.display-inlay-hints"
m = ":toggle-option mouse"
 
# Python things
p = "@a=<esc>ms}ms\"if<esc>vhms)iprint<esc>"  # surround selection with print(f"{<sel>=}")

[keys.normal.space.space.e]
# Python running
v = "@:pipe pyeval<ret>"  # eval selection
V = "@:pipe pyeval %{buffer_name}<ret>"  # eval with current file as context
x = "@:pipe pyexec<ret>" # exec selection
X = "@%:pipe pyexec<ret>" # exec whole buffer
r = ":sh python %{buffer_name}"  # run current file (output in pop-up)
R = ":append-output python %{buffer_name}" # run current file (append in pop-up)

[keys.select.space.space.e]
# Python running
v = "@:pipe pyeval<ret>"  # eval selection
V = "@:pipe pyeval <C-r>%<ret>"  # eval with current file as context
x = "@:pipe pyexec<ret>"  # exec selection
X = "@%:pipe pyexec<ret>"  # exec whole buffer
r = "@:sh python %{buffer_name} <C-r>.<ret>"  # run current file (output in pop-up)
R = "@:append-output python %{buffer_name} <C-r>.<ret>"  # run current file (append in pop-up)
